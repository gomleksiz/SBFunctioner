{
    "_ifEqual": "${_ifEqual('value1', 'value2', 'if_value', 'else_value'[, ignore_case])",
    "_ifTrue": "${_ifTrue(value, 'if_value', 'else_value')",
    "_credentialKeyLoc": "${_credentialKeyLoc('<credential_name>')",
    "_credentialPassphrase": "${_credentialPassphrase('<credential_name>')",
    "_credentialToken": "${_credentialToken('<credential_name>')",
    "_credentialUser": "${_credentialUser('<credential_name>')",
    "_credentialPwd": "${_credentialPwd('<credential_name>')",
    "_databaseConnection": "${_databaseConnection('<database_connection_name>', '<property_name>')",
    "_isToday": "${_isToday('date'[, 'format', is_relative])",
    "_date": "${_date(['format', day_offset, hour_offset, minute_offset])",
    "_dateadv": "${_dateadv(['format', year_offset, month_offset, day_offset, hour_offset, minute_offset])",
    "_formatDate": "${_formatDate(['date_time', 'format', day_offset, use_business_days, hour_offset, minute_offset, timezone])",
    "_formatDateAdv": "${_formatDateAdv(['date_time', 'format', year_offset, month_offset, day_offset, use_business_days, hour_offset, minute_offset, timezone])",
    "_formatDateTz": "${_formatDateTz('date_time', 'target_time_zone'[, 'output_format'])",
    "_dayOfWeek": "${_dayOfWeek(['date', 'first_dow', first_dow_value])",
    "_daysBetween": "${_daysBetween('date1', 'date2')",
    "_nonBusinessDayOfMonth": "${_nonBusinessDayOfMonth(index, ['date', 'format', reverse])",
    "_businessDayOfMonth": "${_businessDayOfMonth(index, ['date', 'format', reverse])",
    "_dayOfMonth": "${_dayOfMonth(index, ['date', 'format', reverse])",
    "_dayOfWeekInMonth": "${_dayOfWeekInMonth(index, dow, ['date', 'format', reverse])",
    "_dayOfWeekInMonthAdv": "${_dayOfWeekInMonthAdv(index, dow, ['date', 'format', reverse, year_offset, month_offset, day_offset, use_business_days])",
    "_weekdayOfMonth": "${_weekdayOfMonth(index, ['date', 'format', reverse])",
    "_weekdayOfMonthAdv": "${_weekdayOfMonthAdv(index, ['date', 'format', reverse, year_offset, month_offset, day_offset, use_business_days])",
    "_businessDaysBetween": "${_businessDaysBetween('date1', 'date2')",
    "_add": "${_add(augend, addend)",
    "_divide": "${_divide(dividend, divisor)",
    "_multiply": "${_multiply(multiplicand, multiplier)",
    "_mod": "${_mod(dividend, divisor)",
    "_subtract": "${_subtract(minuend, subtrahend)",
    "_businessServices": "${_businessServices(['resultDelimiter'])",
    "_executionUserEmail": "${_executionUserEmail()}",
    "_outputCsvRecordCount": "${_outputCsvRecordCount('<outputType>')}",
    "_outputCsvRecordValueCount": "${_outputCsvRecordValueCount('outputType', recordIndex)}",
    "_outputCsvRecordValue": "${_outputCsvRecordValue('outputType', recordIndex, valueIndex)}",
    "_outputTsvRecordCount": "${_outputTsvRecordCount('<outputType>')}",
    "_outputTsvRecordValueCount": "${_outputTsvRecordValueCount('outputType', recordIndex)}",
    "_outputTsvRecordValue": "${_outputTsvRecordValue('outputType', recordIndex, valueIndex)}",
    "_outputCsvRecordCountFromTask": "${_outputCsvRecordCountFromTask('siblingName', 'outputType')}",
    "_outputCsvRecordValueCountFromTask": "${_outputCsvRecordValueCountFromTask('siblingName', 'outputType', 'recordIndex')}",
    "_outputCsvRecordValueFromTask": "${_outputCsvRecordValueFromTask('siblingName','outputType', recordIndex, valueIndex)}",
    "_outputTsvRecordCountFromTask": "${_outputTsvRecordCountFromTask('siblingName','outputType')}",
    "_outputTsvRecordValueCountFromTask": "${_outputTsvRecordValueCountFromTask('siblingName','outputType', 'recordIndex')}",
    "_outputTsvRecordValueFromTask": "${_outputTsvRecordValueFromTask('siblingName','outputType', recordIndex, valueIndex)}",
    "_outputDelimitedValueCount": "${_outputDelimitedValueCount('outputType', ['delimiter', splitPreserveAllTokens])}",
    "_outputDelimitedValue": "${_outputDelimitedValue('outputType', valueIndex, ['delimiter', splitPreserveAllTokens])}",
    "_outputDelimitedValueCountFromTask": "${_outputDelimitedValueCountFromTask('siblingName','outputType', ['delimiter', splitPreserveAllTokens])}",
    "_outputDelimitedValueFromTask": "${_outputDelimitedValueFromTask('siblingName','outputType', valueIndex, ['delimiter', splitPreserveAllTokens])}",
    "_output": "${_output('outputType'[, 'defaultValue'])",
    "_outputFromTask": "${_outputFromTask('siblingName', 'outputType'[, 'defaultValue'])",
    "_outputNumberOfLines": "${_outputNumberOfLines('outputType')}",
    "_outputNumberOfLinesFromTask": "${_outputNumberOfLinesFromTask('siblingName', 'outputType')}",
    "_outputLines": "${_outputLines('outputType', startLine, numberOfLines[, 'defaultValue', 'resultDelimiter'])",
    "_outputLinesFromTask": "${_outputLinesFromTask('siblingName', 'outputType', startLine, numberOfLines[, 'defaultValue', 'resultDelimiter'])",
    "_outputLinesByRegex": "${_outputLinesByRegex('outputType', 'regexPattern'[, maxCount, numberOfLinesBefore, numberOfLinesAfter, 'defaultValue', 'resultDelimiter'])",
    "_outputLinesByRegexFromTask": "${_outputLinesByRegexFromTask('siblingName', 'outputType', 'regexPattern'[, maxCount, numberOfLinesBefore, numberOfLinesAfter, 'defaultValue', 'resultDelimiter'])",
    "_outputXPath": "${_outputXPath('outputType', 'xPathExpression'[, 'defaultValue', 'delimiter', prettyPrint])}",
    "_outputXPathFromTask": "${_outputXPathFromTask('siblingName', 'outputType', 'xPathExpression'[, 'defaultValue', 'delimiter', prettyPrint])}",
    "_outputJsonPath": "${_outputJsonPath('outputType', 'pathExpression'[, 'defaultValue', 'delimiter', prettyPrint])}",
    "_outputJsonPathFromTask": "${_outputJsonPathFromTask('siblingName', 'outputType', 'pathExpression'[, 'defaultValue', prettyPrint])}",
    "_outputJsonPathAsArray": "${_outputJsonPathAsArray('outputType', 'pathExpression'[, 'defaultValue', prettyPrint])}",
    "_outputPath": "${_outputPath('outputType'[, 'fileExtension'])}",
    "_outputPathFromTask": "${_outputPathFromTask('siblingName', 'outputType'[, 'fileExtension'])}",
    "_sapConnection": "${_sapConnection('<sap_connection_name>', '<property_name>')}",
    "_scriptPath": "${_scriptPath('script_name')}",
    "_resultsColumnNames": "${_resultsColumnNames(['separator'])",
    "_resultsColumnNamesFromTask": "${_resultsColumnNamesFromTask('name'[, 'separator'])",
    "_resultsAll": "${_resultsAll(['separator', 'rowSeparator'])",
    "_resultsAllFromTask": "${_resultsAllFromTask('name'[, 'separator', 'rowSeparator'])",
    "_SQLWarnings": "${_SQLWarnings(['separator'])",
    "_SQLWarningsFromTask": "${_SQLWarningsFromTask('name'[, 'separator'])",
    "_resultsColumn": "${_resultsColumn('name', 'colname'[, rownum, 'default_value'])",
    "_resultsColumnByNo": "${_resultsColumnByNo('name', colnum[, rownum, 'default_value'])",
    "_resultsColumnsCSV": "${_resultsColumnsCSV('name'[, rownum])",
    "_toLowerCase": "${_toLowerCase('value')",
    "_varToLowerCase": "${_varToLowerCase('variableName')",
    "_toUpperCase": "${_toUpperCase('value')",
    "_varToUpperCase": "${_varToUpperCase('variableName')",
    "_varEscapeXml": "${_varEscapeXml('variableName')",
    "_varEscapeJson": "${_varEscapeJson('variableName')",
    "_varEscapeJavaScript": "${_varEscapeJavaScript('variableName')",
    "_varEscapeHtml": "${_varEscapeHtml('variableName')",
    "_varLiteralPattern": "${_varLiteralPattern('variableName')",
    "_randomString": "${_randomString(length[, 'excludeCharacters', 'defaultCharacters'])",
    "_replaceAll": "${_replaceAll('value', 'regex', 'replacement')",
    "_varReplaceAll": "${_varReplaceAll('variableName', 'regex', 'replacement')",
    "_varEncodeBase64": "${_varEncodeBase64('variableName'[, 'charset'])}",
    "_trim": "${_trim('value')",
    "_varTrim": "${_varTrim('variableName')",
    "_indexOf": "${_indexOf('value', 'str')",
    "_varIndexOf": "${_varIndexOf('variableName', 'str')",
    "_indexOfWithOffset": "${_indexOfWithOffset('value', 'str', offset)",
    "_varIndexOfWithOffset": "${_varIndexOfWithOffset('variableName', 'str', offset)",
    "_lastIndexOf": "${_lastIndexOf('value', 'str')",
    "_varLastIndexOf": "${_varLastIndexOf('variableName', 'str')",
    "_lastIndexOfWithOffset": "${_lastIndexOfWithOffset('value', 'str', offset)",
    "_varLastIndexOfWithOffset": "${_varLastIndexOfWithOffset('variableName', 'str', offset)",
    "_length": "${_length('value')",
    "_varLength": "${_varLength('variableName'[, useEmptyForUndefined])",
    "_substring": "${_substring('value', beginIndex[, endIndex])",
    "_varSubstring": "${_varSubstring('variableName', beginIndex[, endIndex])",
    "_varEncodeUrl": "${_varEncodeUrl('variableName')}",
    "_varXPath": "${_varXPath('variableName', 'xPathExpression'[, 'defaultValue', 'delimiter', prettyPrint])}",
    "_varJsonPath": "${_varJsonPath('variableName', 'pathExpression'[, 'defaultValue', 'delimiter', prettyPrint])}",
    "_varJsonPathAsArray": "${_varJsonPathAsArray('variableName', 'pathExpression'[, 'defaultValue', prettyPrint])}",
    "_varNumberOfLines": "${_varNumberOfLines('variableName')}",
    "_varLines": "${_varLines('variableName', startLine, numberOfLines[, 'defaultValue', 'resultDelimiter'])}",
    "_varLinesByRegex": "${_varLinesByRegex('variableName', 'regexPattern'[, maxCount, numberOfLinesBefore, numberOfLinesAfter, 'defaultValue', 'resultDelimiter'])}",
    "_varPath": "${_varPath('variableName'[, 'fileExtension'])}",
    "_varCsvRecordCount": "${_varCsvRecordCount('<variableName>')}",
    "_varCsvRecordValueCount": "${_varCsvRecordValueCount('variableName', recordIndex)}",
    "_varCsvRecordValue": "${_varCsvRecordValue('variableName', recordIndex, valueIndex)}",
    "_varTsvRecordCount": "${_varTsvRecordCount('<variableName>')}",
    "_varTsvRecordValueCount": "${_varTsvRecordValueCount('variableName', recordIndex)}",
    "_varTsvRecordValue": "${_varTsvRecordValue('variableName', recordIndex, valueIndex)}",
    "_varDelimitedValueCount": "${_varDelimitedValueCount('variableName', ['delimiter', splitPreserveAllTokens])}",
    "_varDelimitedValue": "${_varDelimitedValue('variableName', valueIndex, ['delimiter', splitPreserveAllTokens])}",
    "_random": "${_random([max, min])",
    "_siblingid": "${_siblingid('sibling_name')",
    "_varLookup": "${_varLookup('sibling_name', 'variable_name'[,'def'])",
    "_resolve": "${_resolve('variable_name', 'default_value')",
    "_resolveadv": "${_resolveadv('variable_name', 'default_value', [use_default_if_blank])",
    "_convertArrayFieldVariable": "${_convertArrayFieldVariable('arrayFieldVariableName'[,'delimiter', 'separator', 'keyQuote', 'valueQuote'])",
    "_getArrayFieldVariableValue": "${_getArrayFieldVariableValue('arrayFieldVariableName', 'name')",
    "_responseRaw": "${_responseRaw(['default_value'])",
    "_responseRawFromTask": "${_responseRawFromTask('siblingName'[,'defaultValue'])",
    "_responseXPath": "${_responseXPath('xPathExpression'[,'defaultValue','delimiter',prettyPrint])",
    "_responseXPathFromTask": "${_responseXPathFromTask('siblingName','xPathExpression'[,'defaultValue','delimiter',prettyPrint])",
    "_responseJsonPath": "${_responseJsonPath('pathExpression'[,'defaultValue','delimiter',prettyPrint])",
    "_responseJsonPathFromTask": "${_responseJsonPathFromTask('siblingName','pathExpression'[,'defaultValue','delimiter',prettyPrint])",
    "_responseJsonPathAsArray": "${_responseJsonPathAsArray('pathExpression'[,'defaultValue',prettyPrint])",
    "_responseJsonPathAsArrayFromTask": "${_responseJsonPathAsArrayFromTask('siblingName','pathExpression'[,'defaultValue',prettyPrint])"
}