{
    "_SQLWarnings": "${_SQLWarnings(['separator'])",
    "_SQLWarningsFromTask": "${_SQLWarningsFromTask('name'[, 'separator'])",
    "_abs": "${_abs('-1200')} \u2192 1200 ${_abs('1200')} \u2192 1200",
    "_add": "${_add('77', '33')} \u2192 110",
    "_businessDayOfMonth": "${_businessDayOfMonth(1)} \u2192 2012-08-01 ${_businessDayOfMonth(1,'2012-09-01')} \u2192 2012-09-04 ${_businessDayOfMonth(1,'2012-09-01','',true)} \u2192 2012-09-28",
    "_businessDaysBetween": "${_businessDaysBetween('2012-08-01','2012-09-01')} \u2192 23",
    "_businessServices": "${_businessServices()} \u2192 A, B, C",
    "_convertArrayFieldVariable": "${_convertArrayFieldVariable('ops_af_p1')}",
    "_credentialKeyLoc": "${_credentialKeyLoc('RCredentialXYZ')}\u00a0\u2192\u00a0$(ops_unv_cred_key_loc_c89e7b2caf4247909bc46041df8a2643)",
    "_credentialPassphrase": "${_credentialPassphrase('RCredentialXYZ')}\u00a0\u2192\u00a0$(ops_unv_cred_passphrase_c89e7b2caf4247909bc46041df8a2643)",
    "_credentialPwd": "${_credentialPwd('RCredentialXYZ')}\u00a0\u2192\u00a0$(ops_unv_cred_pwd_c89e7b2caf4247909bc46041df8a2643)",
    "_credentialToken": "${_credentialToken('RCredentialXYZ')} \u2192 $(ops_unv_cred_token_c89e7b2caf4247909bc46041df8a264)",
    "_credentialUser": "${_credentialUser('RCredentialXYZ')}\u00a0\u2192\u00a0$(ops_unv_cred_user_c89e7b2caf4247909bc46041df8a2643)",
    "_databaseConnection": "${_databaseConnection('db1', 'type')} \u2192 $(ops_unv_db_connection_type_3ac17d7f3ecb4df0b81aec9c7a24a38c)",
    "_date": "${_date} \u2192 2024-10-16 07:26:34 -0700 ${_date()} \u2192 2024-10-16 07:27:21 -0700 ${_date('yyyy-MM-dd', 5)} \u2192 2024-10-21 ${_date('yyyy-MM-dd HH:mm:ss', -2, -1)} \u2192 2024-10-14 06:30:04 ${_date('', 0, 0, 10)} \u2192 2024-10-16 07:40:28 -0700",
    "_dateadv": "${_formatDate('${__dayOfMonth(2,'${___dateadv('yyyy-MM-dd',0,1)}')}','',-1,true)}",
    "_dayOfMonth": "${_dayOfMonth(5)} \u2192 2012-08-05 ${_dayOfMonth(15, '2012-09-01', 'MM/dd/yyyy')} \u2192 09/15/2012 ${_dayOfMonth(1, '2012-09-01', '', true)} \u2192 2012-09-30",
    "_dayOfWeek": "${_dayOfWeek} \u2192 6 ${_dayOfWeek()} \u2192 6 ${_dayOfWeek('2012-07-04')} \u2192 4 ${_dayOfWeek('2012-07-04', 'mon')} \u2192 3",
    "_dayOfWeekInMonth": "${_dayOfWeekInMonth(1, 'tue')} \u2192 2024-07-02 ${_dayOfWeekInMonth(2,'wed', '2024-09-01')} \u2192 2024-09-11 ${_dayOfWeekInMonth(1, 'sun', '2024-09-01', '', true)} \u2192 2024-09-29",
    "_dayOfWeekInMonthAdv": "${_dayOfWeekInMonthAdv(1, 'tue', '', false, 1) --> 2026-07-02${_dayOfWeekInMonthAdv(2, 'wed', '2025-09-15', '', false, 0, -2) --> 2025-09-08${_dayOfWeekInMonthAdv(1, 'sun', '2025-09-15', '', true, 0, 0, 2, false) --> 2025-09-30",
    "_daysBetween": "${_daysBetween('2012-08-01','2012-09-01')} \u2192 31",
    "_divide": "${_divide('7','20')} \u2192 0 ${_divide('20','7')} \u2192 2 ${_divide('20','5')} \u2192 4",
    "_executionUserEmail": "${_executionUserEmail()} \u2192 user@stonebranch.com",
    "_formatDate": "${_formatDate('${__dayOfMonth(2,'${___dateadv('yyyy-MM-dd',0,1)}')}','',-1,true)}",
    "_formatDateAdv": "${_formatDateAdv} \u2192 2012-08-24 15:55 ${_formatDateAdv()} \u2192 2012-08-24 15:55 ${_formatDateAdv('','MMddyyyy',1)} \u2192 08242013 ${_formatDateAdv('2012-09-01','',0,1)} \u2192 2012-10-01 ${_formatDateAdv('2012-09-01','',0,-1)} \u2192 2012-08-01 ${_formatDateAdv('2012-09-01','',0,0,5,false)} \u2192 2012-09-06",
    "_formatDateTz": "${_formatDateTz('2018-10-13 01:02:03 -0400', 'Australia/Sydney')} \u2192 2018-10-13 16:02:03 +1100 ${_formatDateTz('2018-10-13 01:02:03 -0400', 'Australia/Sydney','yyyy-MM-dd HH:mm Z')} \u2192 2018-10-13 16:02 +1100 ${_formatDateTz('${ops_launch_time}', '${ops_time_zone}')} = ${_formatDateTz('2018-06-13 15:35:00 -0400', 'Europe/Berlin')} \u2192 2018-06-13 21:35:00 +0200",
    "_function": "${_function(arg1, ..., argN)}",
    "_getArrayFieldVariableValue": "${_getArrayFieldVariableValue('arrayFieldVariableName', 'name')",
    "_ifEqual": "${_ifEqual('abc','def','YES','NO')} \u2192 NO",
    "_ifTrue": "${_ifTrue(${__isToday('Mon', 'E')},'20:00','22:00')} \u2192 22:00",
    "_indexOf": "${_indexOf('MyString', 'tr')} \u2192 3${_indexOf('MyString', 'x')} \u2192 -1",
    "_indexOfWithOffset": "${_indexOfWithOffset('MyString', 'tr', 1)} \u2192 4${_indexOfWithOffset('MyString', 'x', 1)} \u2192 -1",
    "_isToday": "${_isToday('Wed', 'E')} \u2192 true ${_isToday('${__dayOfMonth(1,'','',true)}')} \u2192 false",
    "_lastIndexOf": "${_lastIndexOf('Some text', 'e')} \u2192 6${_lastIndexOf('Some text', 'a')} \u2192 -1",
    "_lastIndexOfWithOffset": "${_lastIndexOfWithOffset('Some text', 'e', 1)} \u2192 7${_lastIndexOfWithOffset('Some text', 'a', 1)} \u2192 -1",
    "_length": "${_length('Some text')} \u2192 9",
    "_mod": "${_mod('10', '2')} \u2192 0 ${_mod('10', '3')} \u2192 1 ${_mod('70', '65')} \u2192 5",
    "_multiply": "${_multiply('7','20')} \u2192 140",
    "_nonBusinessDayOfMonth": "${_nonBusinessDayOfMonth(1)} \u2192 2012-08-04 ${_nonBusinessDayOfMonth(1,'2012-09-01')} \u2192 2012-09-01 ${_nonBusinessDayOfMonth(1,'2012-09-01','',true)} \u2192 2012-09-30",
    "_output": "${_output('outputType'[, 'defaultValue'])",
    "_outputCsvRecordCountFromTask": "${_outputCsvRecordCountFromTask('task-2','STDOUT')} \u2192 2",
    "_outputCsvRecordValueCount": "${_outputCsvRecordValueCount('STDOUT','1')} \u2192 4",
    "_outputCsvRecordValueCountFromTask": "${_outputCsvRecordValueCountFromTask('task-2','STDOUT','1')} \u2192 4",
    "_outputCsvRecordValueFromTask": "${_outputCsvRecordValueFromTask('task-2','STDOUT','1', '2')} \u2192 G",
    "_outputDelimitedValue": "${_outputDelimitedValue('STDOUT','2',':')} \u2192 C${_outputDelimitedValue('STDOUT','2',':', true)} \u2192 ''",
    "_outputDelimitedValueCount": "${_outputDelimitedValueCount('STDOUT', ':'} \u2192 4${_outputDelimitedValueCount('STDOUT', ':', true)} \u2192 5",
    "_outputDelimitedValueCountFromTask": "${_outputDelimitedValueCountFromTask('task-2', 'STDOUT', ':'} \u2192 4${_outputDelimitedValueCountFromTask('task-2', 'STDOUT', ':', true)} \u2192 5",
    "_outputDelimitedValueFromTask": "${_outputDelimitedValueFromTask('task-2', 'STDOUT','2',':')} \u2192 C${_outputDelimitedValueFromTask('task-2', 'STDOUT','2',':', true)} \u2192 ''",
    "_outputFromTask": "${_outputFromTask('siblingName', 'outputType'[, 'defaultValue'])",
    "_outputJsonPath": "${_outputJsonPath('STDOUT', '$.code')}",
    "_outputJsonPathAsArray": "${_outputJsonPathAsArray('STDOUT', '$[*].message', '', true)}",
    "_outputJsonPathAsArrayFromTask": "${_outputJsonPathAsArrayFromTask('Sibling_With_JSON_Output', 'STDOUT', '$[*].message')}",
    "_outputJsonPathFromTask": "${_outputJsonPathFromTask('Sibling_With_JSON_Output', 'STDOUT', '$.code')}",
    "_outputLines": "${_outputLines('STDOUT', 1, 2)} \u2192AB${_outputLines('STDOUT', 1, 2, '', ',') \u2192 A,B",
    "_outputLinesByRegex": "${_outputLinesByRegex('STDOUT', '^ABC=')} \u2192/* Returns empty (the whole line was not matched) */${_outputLinesByRegex('STDOUT', '^ABC=.*')} \u2192 ABC=Some_String",
    "_outputLinesByRegexFromTask": "${_outputLinesByRegexFromTask('task2', 'STDOUT', '^ABC=')} \u2192/* Returns empty (the whole line was not matched) */${_outputLinesByRegexFromTask('task2', 'STDOUT', '^ABC=.*')} \u2192 ABC=Some_String",
    "_outputLinesFromTask": "${_outputLines('STDOUT', 1, 2)} \u2192AB${_outputLinesFromTask('task2', 'STDOUT', 1, 2, '', ',') \u2192 A,B",
    "_outputNumberOfLines": "${_outputNumberOfLines('STDOUT')} \u2192 3",
    "_outputNumberOfLinesFromTask": "${_outputNumberOfLinesFromTask('task-2', 'STDOUT')} \u2192 3",
    "_outputPath": "${_outputPath('outputType'[, 'fileExtension'])}",
    "_outputPathFromTask": "${_outputPathFromTask('siblingName', 'outputType'[, 'fileExtension'])}",
    "_outputTsvRecordCount": "${_outputTsvRecordCount('STDOUT')} \u2192 2",
    "_outputTsvRecordCountFromTask": "${_outputTsvRecordCountFromTask('task-2','STDOUT')} \u2192 2",
    "_outputTsvRecordValue": "${_outputTsvRecordValue('STDOUT','1', '2')} \u2192 G",
    "_outputTsvRecordValueCount": "${_outputTsvRecordValueCount('STDOUT','1')} \u2192 4",
    "_outputTsvRecordValueCountFromTask": "${_outputTsvRecordValueCountFromTask('task-1','STDOUT','1')} \u2192 4",
    "_outputTsvRecordValueFromTask": "${_outputTsvRecordValueFromTask('task-2','STDOUT','1', '2')} \u2192 G",
    "_outputXPath": "${_outputXPath('STDOUT', '//code/text()')}",
    "_outputXPathFromTask": "${_outputXPathFromTask('Sibling_With_XML_Output', 'STDOUT', '//code/text()')}",
    "_random": "${_random(1, 100)} \u2192 91",
    "_randomString": "${_randomString(24, '', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890@#$%*')} \u2192 5*L8T1RN#$AQWEKPA@BQ19JD",
    "_replaceAll": "${_replaceAll('Some text', '[ex]', 'Z')} \u2192 SomZ tZZt",
    "_resolve": "${_resolve('my_var', '-1')} \u2192 Variable Value",
    "_resolveadv": "${_resolveadv('my_var', '-1', true)} \u2192 Variable Value",
    "_responseJsonPath": "${_responseJsonPath('$.info')} \u2192 No changes detected for variable my_var, ignoring Set Variable command.",
    "_responseJsonPathAsArray": "${_responseJsonPathAsArray('$.info')} \u2192 [\"No changes detected for variable my_var, ignoring Set Variable command.\"]",
    "_responseJsonPathAsArrayFromTask": "${_responseJsonPathAsArrayFromTask('task2', '$.info')} \u2192 [\"No changes detected for variable my_var, ignoring Set Variable command.\"]",
    "_responseJsonPathFromTask": "${_responseJsonPathFromTask('task2', '$.info')} \u2192 No changes detected for variable my_var, ignoring Set Variable command.",
    "_responseRaw": "${_responseRaw(['default_value'])",
    "_responseRawFromTask": "${_responseRawFromTask('siblingName'[,'defaultValue'])",
    "_responseXPath": "${_responseXPath('//info')}",
    "_responseXPathFromTask": "${_responseXPathFromTask('siblingName','xPathExpression'[,'defaultValue','delimiter',prettyPrint])",
    "_resultsAll": "${_resultsAll(['separator', 'rowSeparator'])",
    "_resultsAllFromTask": "${_resultsAllFromTask('name'[, 'separator', 'rowSeparator'])",
    "_resultsColumn": "${_resultsColumn('name', 'colname'[, rownum, 'default_value'])",
    "_resultsColumnByNo": "${_resultsColumnByNo('name', colnum[, rownum, 'default_value'])",
    "_resultsColumnNames": "${_resultsColumnNames(['separator'])",
    "_resultsColumnNamesFromTask": "${_resultsColumnNamesFromTask('name'[, 'separator'])",
    "_resultsColumnsCSV": "${_resultsColumnsCSV('name'[, rownum])",
    "_sapConnection": "${_sapConnection('sap1', 'sap_connection_type')}\u2192\u00a0$(ops_unv_sap_connection_sap_connection_type_3ac17d7f3ecb4df0b81aec9c7a24a38c)",
    "_scriptPath": "${_scriptPath('MyDataScript')} \u2192 $(ops_unv_script_path_507ffdbd0eba4b62b0e31e0fd22f6bec)",
    "_siblingid": "${_siblingid('sibling_name')",
    "_substring": "${_substring('hamburger', 4, 8)} \u2192 urge",
    "_subtract": "${_subtract('77','33')} \u2192 44 ${_subtract('33','77')} \u2192 -44",
    "_toLowerCase": "${_toLowerCase('MyString')} \u2192 mystring",
    "_toUpperCase": "${_toUpperCase('MyString')} \u2192 MYSTRING",
    "_trim": "${_trim('\u00a0  \u00a0 My String  ')} \u2192 My String",
    "_varCsvRecordCount": "${_varCsvRecordCount('my_variable')} \u2192 2",
    "_varCsvRecordValue": "${_varCsvRecordValue('STDOUT','1', '2')} \u2192 G",
    "_varCsvRecordValueCount": "${_varCsvRecordValueCount('my_variable','1')} \u2192 4",
    "_varDelimitedValue": "${_varDelimitedValue('my_variable','2',':')} \u2192 C${_varDelimitedValue('my_variable','2',':', true)} \u2192 ''",
    "_varDelimitedValueCount": "${_varDelimitedValueCount('my_variable',':')} \u2192 4${_varDelimitedValueCount('my_variable',':', true)} \u2192 5",
    "_varEncodeBase64": "${_varEncodeBase64('rawstring')} \u2192 VGVzdCBTdHJpbmc=",
    "_varEncodeUrl": "${_varEncodeUrl('rawstring')} \u2192 ABC%24%25%5E----DEF",
    "_varEscapeHtml": "${_varEscapeHtml('escape_me')} \u2192 `1234567890\\E-=[]\\;',./ ~!@#$%^&amp;*()_+{}|:&quot;&lt;&gt;?",
    "_varEscapeJavaScript": "${_varEscapeJavaScript('escape_me')} \u2192 `1234567890\\\\E-=[]\\\\;\\',.\\/ ~!@#$%^&*()_+{}|:\\\"<>?",
    "_varEscapeJson": "${_varEscapeJson('escape_me')} \u2192 `1234567890\\\\E-=[]\\\\;',.\\/ ~!@#$%^&*()_+{}|:\\\"<>?",
    "_varEscapeXml": "${_varEscapeXml('escape_me')} \u2192 `1234567890\\E-=[]\\;&apos;,./ ~!@#$%^&amp;*()_+{}|:&quot;&lt;&gt;?",
    "_varIndexOf": "${_varIndexOf('my_var', 'a')} \u2192 1${_varIndexOf('my_var', 'x')} \u2192 -1",
    "_varIndexOfWithOffset": "${_varIndexOfWithOffset('my_var', 'a')} \u2192 2${_varIndexOfWithOffset('my_var', 'x')} \u2192 -1",
    "_varJsonPath": "${_varJsonPath('my_variable', '$.code')} \u2192 10",
    "_varJsonPathAsArray": "${_varJsonPathAsArray('my_variable', '$[*].message', '', true)} \u2192 [ \"Hello\", \"World!\" ]",
    "_varLastIndexOf": "${_varLastIndexOf('my_var', 'a')} \u2192 10${_varLastIndexOf('my_var', 'x')} \u2192 -1",
    "_varLastIndexOfWithOffset": "${_varLastIndexOfWithOffset('my_var', 'a', 1)} \u2192 11${_varLastIndexOfWithOffset('my_var', 'x', 1)} \u2192 -1",
    "_varLength": "${_varLength('my_var')} \u2192 14",
    "_varLines": "${_varLines('my_variable', 2, 2)} \u2192 Line 2 Line 3",
    "_varLinesByRegex": "${_varLinesByRegex('my_variable', '^ABC=')} \u2192 /* Returns empty (the whole line was not matched) */${_varLinesByRegex('my_variable', '^ABC=.*')} \u2192 ABC=Some_String",
    "_varLiteralPattern": "${_varLiteralPattern('escape_me')} \u2192 \\Q`1234567890\\E\\\\E\\Q-=[]\\;',./ ~!@#$%^&*()_+{}|:\"<>?\\E",
    "_varLookup": "${_varLookup('task-2', 'my_var', '-1')} \u2192 Variable Value",
    "_varNumberOfLines": "${_varNumberOfLines('my_variable')} \u2192 3",
    "_varReplaceAll": "${_varReplaceAll('my_var', '[^ae]', 'x')} \u2192 xaxxaxxexxaxxe",
    "_varSubstring": "${_varSubstring('food', 4, 8)} \u2192 urge ${_varSubstring('face', 1, 5)} \u2192 mile",
    "_varToLowerCase": "${_varToLowerCase('my_var')} \u2192 variable value",
    "_varToUpperCase": "${_varToUpperCase('my_var')} \u2192 VARIABLE VALUE",
    "_varTrim": "${_varTrim('my_var')} = Variable Value",
    "_varTsvRecordCount": "${_varTsvRecordCount('my_variable')} \u2192 2",
    "_varTsvRecordValueCount": "${_varTsvRecordValueCount('my_variable','1')} \u2192 4",
    "_varXPath": "${_varXPath('my_variable', '//code/text()')} \u2192 10",
    "_weekdayOfMonth": "${_weekdayOfMonth(1)} \u2192 2024-07-01 ${_weekdayOfMonth(2,'2024-09-01')} \u2192 2024-09-03 ${_weekdayOfMonth(1,'2024-09-01','',true)} \u2192 2024-09-30",
    "_weekdayOfMonthAdv": "${_weekdayOfMonthAdv(2, '2025-02-15', '', false, 1) --> 2026-02-04${_weekdayOfMonthAdv(1, '2025-05-15', '', true, 0, -2) --> 2025-03-30${_weekdayOfMonthAdv(6, '2025-09-15', '', false, 0, 0, 2, false) --> 2025-09-10",
    "date": "${_ifEqual('abc','ABC','YES','NO',true)} \u2192 YES${_ifEqual('2015-08-15','${__date('yyyy-MM-dd')}','17:00','18:00')} \u2192 18:00",
    "dateadv": "${_formatDate('${__dayOfMonth(2,'${___dateadv('yyyy-MM-dd',0,1)}')}','',-1,true)}",
    "dayOfMonth": "${_formatDate('${__dayOfMonth(2,'${___dateadv('yyyy-MM-dd',0,1)}')}','',-1,true)}",
    "isToday": "${_ifTrue(${__isToday('Mon', 'E')},'20:00','22:00')} \u2192 22:00"
}